<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/batch
                           http://www.springframework.org/schema/batch/spring-batch.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="databaseType" value="mysql"/>
        <property name="tablePrefix" value="BATCH_"/>
    </bean>

    <!-- Avoid to overcome JDBC binding and use SimpleJobExplorer-->
    <bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="tablePrefix" value="BATCH_"/>
    </bean>


    <!--bean id="jobRepository"
      class="org.springframework.batch.mongodb.MongoJobRepositoryFactoryBean">
    <property name="transactionManager" ref="transactionManager" />
    <property name="stepExecutionDao" ref="stepExecutionDao" />
    <property name="jobExecutionDao" ref="jobExecutionDao" />
    <property name="jobInstanceDao" ref="jobInstanceDao" />
    <property name="executionContextDao" ref="executionContextDao" />
    </bean-->



    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>


    <bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
        <property name="jobRepository" ref="jobRepository"></property>
        <property name="jobRegistry" ref="jobRegistry"></property>
        <property name="jobExplorer" ref="jobExplorer"></property>
        <property name="jobLauncher" ref="jobLauncher"></property>
    </bean>

    <bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry"/>

    <bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
        <property name="jobRegistry" ref="jobRegistry"/>
    </bean>



    <bean id="calculateEventMetricsTask" class="org.sbq.batch.tasks.CalculateEventMetricsTask"/>
    <bean id="calculateOnlineMetricsTask" class="org.sbq.batch.tasks.CalculateOnlineMetricsTask"/>
    <bean id="longRunningBatchTask" class="org.sbq.batch.tasks.LongRunningBatchTask"/>

    <batch:job id="calculateEventMetricsJob">
        <batch:step id="calculateEventMetrics">
            <tasklet ref="calculateEventMetricsTask"/>
        </batch:step>
    </batch:job>

    <batch:job id="calculateOnlineMetricsJob">
        <batch:step id="calculateOnlineMetrics">
            <tasklet ref="calculateOnlineMetricsTask"/>
        </batch:step>
    </batch:job>

    <batch:job id="longRunningBatchJob">
        <batch:step id="longRunningBatchStep">
            <tasklet ref="longRunningBatchTask"/>
        </batch:step>
    </batch:job>

    <aop:aspectj-autoproxy/>

    <bean id="taskBatchRetryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="retryPolicy" ref="taskBatchRetryPolicy"/>
        <property name="backOffPolicy" ref="ExponentialBackOffPolicy"/>
    </bean>

    <bean id="taskBatchRetryPolicy" class="org.springframework.retry.policy.SimpleRetryPolicy">
        <constructor-arg index="0" value="5"/>
        <constructor-arg index="1">
            <map>
                <entry key="java.lang.RuntimeException" value="true"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="ExponentialBackOffPolicy" class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
        <property name="initialInterval" value="300">
            <description>Initial sleep interval value, default 300 ms</description>
        </property>
        <property name="maxInterval" value="30000">
            <description>The maximum value of the backoff period in milliseconds.</description>
        </property>
        <property name="multiplier" value="2.0">
            <description>The value to increment the exp seed with for each retry attempt.</description>
        </property>
    </bean>

    <bean id="retryAdvice"
          class="org.springframework.retry.interceptor.RetryOperationsInterceptor">
        <property name="RetryOperations" ref="taskBatchRetryTemplate"/>
    </bean>

    <aop:config>
        <aop:pointcut id="anyExecutionOfTask"
                      expression="execution(* org.sbq.batch.service..*.*(..))"/>
        <aop:advisor pointcut-ref="anyExecutionOfTask"
                     advice-ref="retryAdvice" order="-1"/>
    </aop:config>

</beans>